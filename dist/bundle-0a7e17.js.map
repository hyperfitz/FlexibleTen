{"version":3,"sources":["webpack:///webpack/bootstrap 0a7e177e33392dfc86a7","webpack:///external \"React\"","webpack:///./src/logic/util.ts","webpack:///./src/logic/number.ts","webpack:///./src/logic/numbertables.ts","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/App.tsx","webpack:///./src/components/CalcPage.tsx","webpack:///./src/components/Calculator.tsx","webpack:///./src/components/CalcButton.tsx","webpack:///./src/components/NumberDisplay.tsx","webpack:///./src/logic/render.ts","webpack:///./src/logic/convert.ts","webpack:///./src/logic/operations.ts","webpack:///./src/logic/compare.ts","webpack:///./assets/css/style.css","webpack:///./assets/images/logo.png"],"names":[],"mappings":"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","file":"bundle-0a7e17.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0a7e177e33392dfc86a7","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 0\n// module chunks = 0","import {FlexibleNumber} from \"./number\";\nimport {lookupAddition} from \"./numbertables\";\n\n/**\n * Adds two digit sets together recursively\n * \n * The least significant digits are added,\n * then the next up, and so on with any overflow carrying to the\n * next order of magnitude.\n */\nexport function addDigitSet(numberBase: number, num1: Array<number>, num2: Array<number>, index: number=0, carry: number=0, result?: Array<number>): Array<number> {\n  // result is created on the first iteration\n  if (result == null) {\n    result = [];\n  }\n  // Once the index has advanced beyond the end of both numbers, the add operation is over\n  if (index >= num1.length && index >= num2.length) {\n    // if carry is set, make sure to append the last number\n    // (so that 50 + 50 = 100 and not 00)\n    if (carry > 0) {\n      result.push(carry);\n    }\n    return result;\n  }\n  const digit1 = index < num1.length ? num1[index] : 0;\n  const digit2 = index < num2.length ? num2[index] : 0;\n\n  // First add the two numbers, then add the carry\n  const sum = lookupAddition(digit1, digit2, numberBase);\n  const sum2 = lookupAddition(sum.result, carry, numberBase);\n  result.push(sum2.result);\n\n  carry = sum.carry + sum2.carry;\n  // carry = Math.floor(sum / numberBase);\n  addDigitSet(\n    numberBase, num1, num2, index + 1, carry, result\n  );\n  return result;\n}\n\n/** \n * Trims the padded zeros from a digit set.\n * \n * For whole number digit sets, trims the left padded zeros.\n * \n * `00987` -> `987`\n * \n * Since fractional digits are ordered in reverse, the same\n * logic will trim right padded zeros.\n * \n * `0.0098700` -> `0.00987`\n */\nexport function trimZeroPadding(digitSet: Array<number>) {\n  let i = digitSet.length;\n  while (digitSet[i - 1] == 0) {\n    i--;\n  }\n  digitSet.splice(i, digitSet.length - i);\n}\n\n/**\n * Adds any additional zero padding to make sure that both digit\n * sets are the same length.\n * \n * Whole digits example: If the numbers `12345` and `987` are aligned, the result will be\n * `12345` and `00987`\n * \n * Fractional digits example: If the numbers `0.12345` and `0.987` are aligned, the\n * result will be `0.12345` and `0.98700`\n */\nexport function addZeroPadding(digitSet1: Array<number>, digitSet2: Array<number>) {\n  while (digitSet1.length < digitSet2.length) {\n    digitSet1.push(0);\n  }\n  while (digitSet2.length < digitSet1.length) {\n    digitSet2.push(0);\n  }\n}\n\n/** Creates a deep copy of the specified object */\nexport function deepCopy<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Converts a `FlexibleNumber` object into a digit set\n * \n * The result will be ordered least significant digits\n * to most significant.\n */\nexport function convertToDigitSet(num: FlexibleNumber): Array<number> {\n  const fraction = deepCopy(num.fractionDigits);\n  fraction.reverse();\n  return fraction.concat(num.wholeDigits);\n}\n\n/**\n * Converts a digit set into a `FlexibleNumber` object\n * \n * @param digits Digit set to convert. This includes both whole and fractional digits.\n * @param decimalPlace This is the number of fractional digits.\n * @param numberBase Base of the flexible number.\n */\nexport function convertFromDigitSet(digits: Array<number>, decimalPlace: number, numberBase: number, negative?: boolean): FlexibleNumber {\n  const wholeDigits = deepCopy(digits);\n  const fractionDigits = wholeDigits.splice(0, decimalPlace);\n  fractionDigits.reverse();\n  trimZeroPadding(wholeDigits);\n  trimZeroPadding(fractionDigits);\n  return {\n    wholeDigits: wholeDigits,\n    fractionDigits: fractionDigits,\n    numberBase: numberBase,\n    negative: negative,\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/util.ts","/**\n * Numbers are represented as a series of digits\n * with a decimal place.\n */\nexport interface FlexibleNumber {\n\n  /**\n   * The base of the number system\n   * to which this number belongs (like base 10).\n   * Currently number systems from 2 to 64 are supported.\n   */\n  numberBase: number;\n\n  /**\n   * Each digit is an integer ranging from 0\n   * to the base of the number system - 1.\n   * Digits are ordered from left to right in order\n   * of decreasing value.\n   * So in base 10, the number 1234\n   * would be represented in the array of digits\n   * as [1,2,3,4]\n   */\n  wholeDigits: Array<number>;\n\n  /**\n   * Just like `wholeDigits`, but to the right of the decimal place.\n   */\n  fractionDigits: Array<number>;\n\n  /**\n   * If true, this is a negative number\n   */\n  negative?: boolean;\n}\n\n/**\n * Convenience function for creating a new empty number\n * with the specified number base.\n */\nexport function newNumber(numberBase: number): FlexibleNumber {\n  return {\n    fractionDigits: [],\n    wholeDigits: [],\n    numberBase: numberBase,\n    negative: false,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/number.ts","const maxBase = 64;\n\n/** Represents the result of an addition or subtraction result of two digits */\nexport interface NumberTableEntry {\n  /** Result number from an operation */\n  result: number;\n  /** Indicates a carry results from the operation */\n  carry: number;\n}\n\n/** Represents a table of all addition results for digits of each base */\ntype NumberTable = {[key: number]: Array<Array<NumberTableEntry>>};\n\nfunction generateNumberTables(operation: (num1: number, num2: number, base: number) => NumberTableEntry): NumberTable {\n  // For each base, create a two-dimensional array\n  // of left operand -> right operand -> result, carry\n  //\n  // Base\n  // - left operand\n  // - - right operand\n  // - - - result, carry\n  const tables: NumberTable = {};\n  for (let base = 2; base <= maxBase; base++) {\n    tables[base] = [];\n    for (let num1 = 0; num1 <= base; num1++) {\n      tables[base].push([]);\n      for (let num2 = 0; num2 <= base; num2++) {\n        tables[base][num1].push(operation(num1, num2, base));\n      }\n    }\n  }\n  return tables;\n}\n\nfunction generateAdditionTables(): NumberTable {\n  return generateNumberTables((num1: number, num2: number, base: number) => {\n    const result = (num1 + num2) % base;\n    const carry = Math.floor((num1 + num2) / base);\n    return {\n      result: result,\n      carry: carry,\n    };\n  });\n}\n\nconst AdditionTables: NumberTable = generateAdditionTables();\n\nfunction generateSubtractionTables(): NumberTable {\n  return generateNumberTables((num1: number, num2: number, base: number) => {\n    let result = num1 - num2;\n    const carry = result < 0 ? 1 : 0;\n    if (carry) {\n      result = result + base;\n    }\n    return {\n      result: result,\n      carry: carry,\n    }\n  });\n}\n\nconst SubtractionTables: NumberTable = generateSubtractionTables();\n\nexport function lookupAddition(num1: number, num2: number, base: number): NumberTableEntry {\n  return AdditionTables[base][num1][num2];\n}\n\nexport function lookupSubtraction(num1: number, num2: number, base: number): NumberTableEntry {\n  return SubtractionTables[base][num1][num2];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/numbertables.ts","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"example\")\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 6\n// module chunks = 0","import * as React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport {CalcPage} from \"./CalcPage\";\n\n// export interface HelloProps { compiler: string; framework: string; }\nexport interface AppState {\n\n}\n\nexport interface AppProps { }\n\n// 'HelloProps' describes the shape of props.\n// State is never set so we use the 'undefined' type.\nexport class App extends React.Component<AppProps, AppState> {\n\n    componentWillMount() {\n    }\n\n    render() {\n        return <div className=\"cl-mcont\">\n          <CalcPage />\n            {/* <BrowserRouter>\n                <div>\n                    <Route exact path=\"/\" component={LoginPage} />\n                    <Route path=\"/interests\" component={Interests} />\n                    <Route path=\"/bio\" component={BioPage} />\n                </div>\n            </BrowserRouter> */}\n        </div>\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/App.tsx","import * as React from \"react\";\n\nimport { Calculator } from \"./Calculator\";\n\nexport class CalcPage extends React.Component {\n  render() {\n    return <div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-md-3\"></div>\n        <div className=\"col-lg-6 col-md-6\">\n          <h1 className=\"text-center calc-header\">Flexible Ten Calculator</h1>\n        </div>\n        <div className=\"col-lg-3 col-md-3\"></div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-md-3\"></div>\n        <div className=\"col-lg-6 col-md-6\">\n          <Calculator />\n        </div>\n        <div className=\"col-lg-3 col-md-3\"></div>\n      </div>\n    </div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/CalcPage.tsx","import * as React from \"react\";\n\nimport { CalcButton } from \"./CalcButton\";\nimport { NumberDisplay } from \"./NumberDisplay\";\n\nimport { FlexibleNumber } from \"../logic/number\";\nimport * as convert from \"../logic/convert\";\nimport * as operations from \"../logic/operations\";\n\nexport interface CalculatorState {\n  operationRegister?: FlexibleNumber;\n  displayRegisterA: FlexibleNumber;\n  displayRegisterB: FlexibleNumber;\n  operation?: string;\n  fraction?: boolean;\n  operationPending?: boolean;\n}\n\nexport class Calculator extends React.Component<undefined, CalculatorState> {\n\n  private updateRegisterA(num: FlexibleNumber) {\n    const numb = convert.convertNumber(num, this.state.displayRegisterB.numberBase);\n    this.setState({\n      displayRegisterA: num,\n      displayRegisterB: numb,\n    });\n  }\n\n  private onClear() {\n    this.setState({\n      fraction: false,\n      operationPending: false,\n      operation: \"\",\n    });\n    const reg = this.state.displayRegisterA;\n    reg.fractionDigits = [];\n    reg.wholeDigits = [];\n    reg.negative = false;\n    this.updateRegisterA(reg);\n  }\n\n  handleNumberEntry(id: string) {\n    // console.log(\"calc click - \" + id);\n    if (this.state.operationPending) {\n      const operationRegister = JSON.parse(JSON.stringify(this.state.displayRegisterA));\n      this.state.displayRegisterA.fractionDigits = [];\n      this.state.displayRegisterA.wholeDigits = [];\n      this.state.displayRegisterA.negative = false;\n      this.setState({\n        operationRegister: operationRegister,\n        operationPending: false,\n      });\n    }\n    const num = parseInt(id);\n    const reg = this.state.displayRegisterA;\n    if (this.state.fraction) {\n      reg.fractionDigits.push(num);\n    } else {\n      reg.wholeDigits.unshift(num);\n    }\n    this.updateRegisterA(reg);\n  }\n\n  handleOperation() {\n    if (!this.state.operation) {\n      return;\n    }\n    let newNumber: FlexibleNumber;\n    if (this.state.operation == \"+\") {\n      newNumber = operations.addNumbers(this.state.operationRegister, this.state.displayRegisterA);\n      \n    }\n    if (this.state.operation == \"-\") {\n      newNumber = operations.subtractNumbers(this.state.operationRegister, this.state.displayRegisterA);\n    }\n    if (this.state.operation == \"*\") {\n      console.log(\"multiplication!\");\n      return;\n    }\n    if (this.state.operation == \"/\") {\n      console.log(\"division!\");\n      return;\n    }\n    this.setState({\n      operationRegister: null,\n      operation: null,\n    });\n    this.updateRegisterA(newNumber);\n  }\n\n  handleOperationClick(operation: string) {\n    this.setState({\n      operationPending: true,\n      operation: operation,\n      fraction: false,\n    });\n  }\n\n  handleDecimalClick() {\n    this.setState({\n      fraction: true\n    });\n  }\n\n  componentWillMount() {\n    const displayRegisterA: FlexibleNumber = {\n      negative: false,\n      fractionDigits: [],\n      wholeDigits: [],\n      numberBase: 10,\n    };\n    const displayRegisterB: FlexibleNumber = {\n      negative: false,\n      fractionDigits: [],\n      wholeDigits: [],\n      numberBase: 16,\n    }\n    this.setState({\n      displayRegisterA: displayRegisterA,\n      displayRegisterB: displayRegisterB,\n    });\n  }\n\n  render() {\n    console.log(\"rendering\");\n    return <div className=\"block-flat calculator\">\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12\">\n          <h4 className=\"text-center\">\n            Number System: <strong>{this.state.displayRegisterA.numberBase}</strong>\n          </h4>\n          <NumberDisplay num={this.state.displayRegisterA} />\n          {/* <textarea rows={3} className=\"form-control calc-display\">\n\n          </textarea> */}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-12 col-md-12\">\n          <h4 className=\"text-center\">\n            Number System: <strong>{this.state.displayRegisterB.numberBase}</strong>\n          </h4>\n          <NumberDisplay num={this.state.displayRegisterB} />\n          {/* <textarea rows={3} className=\"form-control calc-display\">\n\n          </textarea> */}\n        </div>\n      </div>\n      <div className=\"row\">\n        <CalcButton onClick={this.onClear.bind(this)}>C</CalcButton>\n        <CalcButton>()</CalcButton>\n        <CalcButton id=\"%\" onClick={this.handleOperationClick.bind(this)}>%</CalcButton>\n        <CalcButton id=\"/\" onClick={this.handleOperationClick.bind(this)}>/</CalcButton>\n      </div>\n      <div className=\"row\">\n\n        <CalcButton id=\"7\" onClick={this.handleNumberEntry.bind(this)}>7</CalcButton>\n        <CalcButton id=\"8\" onClick={this.handleNumberEntry.bind(this)}>8</CalcButton>\n        <CalcButton id=\"9\" onClick={this.handleNumberEntry.bind(this)}>9</CalcButton>\n        <CalcButton id=\"*\" onClick={this.handleOperationClick.bind(this)}>*</CalcButton>\n      </div>\n      {/* 7,8,9, times */}\n      <div className=\"row\">\n        <CalcButton id=\"4\" onClick={this.handleNumberEntry.bind(this)}>4</CalcButton>\n        <CalcButton id=\"5\" onClick={this.handleNumberEntry.bind(this)}>5</CalcButton>\n        <CalcButton id=\"6\" onClick={this.handleNumberEntry.bind(this)}>6</CalcButton>\n        <CalcButton id=\"-\" onClick={this.handleOperationClick.bind(this)}>-</CalcButton>\n      </div>\n      {/* 4,5,6, minus */}\n      <div className=\"row\">\n        <CalcButton id=\"1\" onClick={this.handleNumberEntry.bind(this)}>1</CalcButton>\n        <CalcButton id=\"2\" onClick={this.handleNumberEntry.bind(this)}>2</CalcButton>\n        <CalcButton id=\"3\" onClick={this.handleNumberEntry.bind(this)}>3</CalcButton>\n        <CalcButton id=\"+\" onClick={this.handleOperationClick.bind(this)}>+</CalcButton>\n      </div>\n      {/* 1,2,3, plus */}\n      <div className=\"row\">\n        <CalcButton>&plusmn;</CalcButton>\n        <CalcButton id=\"0\" onClick={this.handleNumberEntry.bind(this)}>0</CalcButton>\n        <CalcButton onClick={this.handleDecimalClick.bind(this)}>.</CalcButton>\n        <CalcButton onClick={this.handleOperation.bind(this)}>=</CalcButton>\n      </div>\n      {/* sign, 0, ., equals */}\n    </div>\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Calculator.tsx","import * as React from \"react\";\n\nexport interface CalcButtonProps {\n  id?: string;\n  onClick?: (id: string) => void;\n}\n\nexport class CalcButton extends React.Component<CalcButtonProps> {\n\n  handleClick() {\n    // console.log(\"click! - \" + this.props.id);\n    if (this.props.onClick) {\n      this.props.onClick(this.props.id);\n    }\n  }\n\n  render() {\n    return <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\n      <button className=\"btn btn-default\" onClick={this.handleClick.bind(this)}>{this.props.children}</button>\n    </div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/CalcButton.tsx","import * as React from \"react\";\n\nimport { FlexibleNumber } from \"../logic/number\";\nimport * as render from \"../logic/render\";\n\nexport interface NumberDisplayProps {\n  num: FlexibleNumber;\n}\n\nexport class NumberDisplay extends React.Component<NumberDisplayProps> {\n  render() {\n    const result = render.renderNumber(this.props.num);\n    console.log(\"number display render - \" + result);\n    return <div className=\"form-control calc-display\">\n      {result}\n    </div>\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/NumberDisplay.tsx","import {FlexibleNumber, newNumber} from \"./number\";\nimport {trimZeroPadding} from \"./util\";\n\nconst digits = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ#!\";\n\nfunction buildReverseDigits(): {[key: string]: number} {\n  const result = {};\n  for (let i = 0; i < digits.length; i++) {\n    const c = digits[i];\n    result[c] = i;\n  }\n  return result;\n}\n\nconst reverseDigits = buildReverseDigits();\n\n/** Converts a digit into its rendered form */\nexport function renderDigit(digit: number): string {\n  return digits[digit];\n}\n\n/** Converts a number into a series of rendered digits with decimal place */\nexport function renderNumber(number: FlexibleNumber): string {\n  // build up an array of rendered digits,\n  // then combine them into a single string\n  const arr = [];\n  if (number.wholeDigits.length) {\n    number.wholeDigits.forEach(digit => {\n      arr.push(renderDigit(digit));\n    });\n  } else {\n    arr.push(\"0\");\n  }\n  if (number.negative) {\n    arr.push(\"-\");\n  }\n  arr.reverse();\n  \n  if (number.fractionDigits.length) {\n    arr.push(\".\");\n    number.fractionDigits.forEach(digit => {\n      arr.push(renderDigit(digit));\n    });\n  }\n  return arr.join(\"\");\n}\n\n/** Parses a number string representation into a `FlexibleNumber` */\nexport function parseNumber(numberStr: string, numberBase: number): FlexibleNumber {\n  const negative = numberStr.indexOf(\"-\") == 0;\n  if (negative) {\n    numberStr = numberStr.substring(1);\n  }\n  const num = newNumber(numberBase);\n  const decimal = numberStr.indexOf(\".\");\n  if (decimal == -1) {\n    num.wholeDigits = parseDigits(numberStr);\n  } else {\n    const parts = numberStr.split(\".\");\n    num.wholeDigits = parseDigits(parts[0]);\n    num.fractionDigits = parseDigits(parts[1]);\n  }\n  // re-order so that least significant digit comes first\n  num.wholeDigits.reverse();\n  trimZeroPadding(num.wholeDigits);\n  trimZeroPadding(num.fractionDigits);\n  num.negative = negative;  \n  return num;\n}\n\n/** Parses a series of digits from string form into array form */\nfunction parseDigits(digitStr: string): Array<number> {\n  const digits: Array<number> = [];\n  for (let i = 0; i < digitStr.length; i++) {\n    const c = digitStr[i];\n    digits.push(reverseDigits[c]);\n  }\n  return digits;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/logic/render.ts","import {FlexibleNumber} from \"./number\";\nimport {addDigitSet, trimZeroPadding} from \"./util\";\n\nconst MaxDecimalPlaces = 30;\n\nexport function convertNumber(num: FlexibleNumber, toBase: number): FlexibleNumber {\n  const result: FlexibleNumber = {\n    wholeDigits: [],\n    fractionDigits: [],\n    numberBase: toBase,\n  };\n  if (num.wholeDigits.length) {\n    result.wholeDigits = convertDigitSet(num.wholeDigits, num.numberBase, toBase);\n  }\n  if (num.fractionDigits.length) {\n    let fractionNumerator = getDigitSetValue(num.fractionDigits, num.numberBase);\n    let fractionDenominator = Math.pow(num.numberBase, num.fractionDigits.length);\n    // Multiply numerator by number base to skip the initial 0 to the left of the decimal point\n    result.fractionDigits = longDivision(fractionNumerator * toBase, fractionDenominator, toBase);\n    trimZeroPadding(result.fractionDigits);\n  }\n  return result;\n}\n\n\n\nfunction longDivision(numerator: number, denominator: number, numberBase: number, result?: Array<number>): Array<number> {\n  if (result == null) {\n    result = [];\n  }\n  if (result.length < MaxDecimalPlaces) {\n    const quotient = Math.floor(numerator / denominator);\n    result.push(quotient);\n    const remainder = numerator % denominator;\n    // console.log(\"num=\" + numerator + \", den=\" + denominator + \", quot=\" + quotient + \", rem=\" + remainder);\n    if (remainder > 0) {\n      numerator -= quotient * denominator;\n      numerator *= numberBase;\n      longDivision(numerator, denominator, numberBase, result);\n    }\n  }\n  return result;\n}\n\nfunction getDigitSetValue(digits: Array<number>, numberBase: number): number {\n  let result = 0;\n  digits.forEach((digit, index) => {\n    result += digit * Math.pow(numberBase, index);\n  });\n  return result;\n}\n\nfunction convertDigitSet(digits: Array<number>, srcBase: number, destBase: number): Array<number> {\n  let result = convertDigit(digits[0], destBase);\n  for (let i = 1; i < digits.length; i++) {\n    result = addDigitSet(destBase, result, convertDigit(digits[i] * Math.pow(srcBase, i), destBase));\n  }\n  return result;\n}\n\n\n\nfunction convertDigit(src: number, toBase: number, result: Array<number>=null): Array<number> {\n  // console.log(\"convert: num=\" + src);\n  if (result == null) {\n    result = [];\n  }\n  const resultDigit = src % toBase;\n  result.push(resultDigit);\n  const carry = Math.floor(src / toBase);\n  if (carry > 0) {\n    convertDigit(carry, toBase, result);\n  }\n  return result;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/logic/convert.ts","import {\n  addDigitSet, deepCopy, addZeroPadding,\n  convertToDigitSet, convertFromDigitSet, trimZeroPadding\n} from \"./util\";\nimport { FlexibleNumber, newNumber } from \"./number\";\nimport { compareNumbers } from \"./compare\";\nimport { lookupSubtraction, lookupAddition, NumberTableEntry } from \"./numbertables\";\n\n/**\n * Adds two numbers together\n * \n * // TODO: support negative numbers\n */\nexport function addNumbers(num1: FlexibleNumber, num2: FlexibleNumber): FlexibleNumber {\n  // TODO: support negative numbers\n  num1 = deepCopy(num1);\n  num2 = deepCopy(num2);\n  addZeroPadding(num1.wholeDigits, num2.wholeDigits);\n  addZeroPadding(num1.fractionDigits, num2.fractionDigits);\n\n  // Should result be negative?\n  let negative = false;\n  // Should we subtract instead of add? (for combining negative with positive numbers)\n  let subtract = false;\n  if (num1.negative && num2.negative) {\n    negative = true;\n  }\n  if (num1.negative != num2.negative) {\n    subtract = true;\n  }\n  // console.log(\"num1=\" + num1.wholeDigits + \", num2=\" + num2.wholeDigits + \", neg=\" + negative + \", sub=\" + subtract);\n  let digits3: Array<number>;\n  if (subtract) {\n    // determine if the negative number is bigger in magnitude than the\n    // positive number. Convert the negative to the positive and subtract\n    // the smaller magnitude number from the larger magnitude number.\n    const [nNum, pNum] = num1.negative ? [num1, num2] : [num2, num1];\n    nNum.negative = false;\n    const nDigits = convertToDigitSet(nNum);\n    const pDigits = convertToDigitSet(pNum);\n    switch (compareNumbers(nNum, pNum)) {\n      case 0:\n        // a positive number added to a negative number of the\n        // same magnitude equals zero\n        return newNumber(num1.numberBase);\n      case 1:\n        negative = true;\n        digits3 = subtractDigitSet(num1.numberBase, nDigits, pDigits);\n        break;\n      default:\n        digits3 = subtractDigitSet(num1.numberBase, pDigits, nDigits);\n        break;\n    }\n  } else {\n    const digits1 = convertToDigitSet(num1);\n    const digits2 = convertToDigitSet(num2);\n    digits3 = addDigitSet(num1.numberBase, digits1, digits2);\n  }\n\n  const result = convertFromDigitSet(digits3, num1.fractionDigits.length, num1.numberBase);\n  result.negative = negative;\n  return result;\n}\n\n/** Subtracts `num1` from `num2` */\nexport function subtractNumbers(num1: FlexibleNumber, num2: FlexibleNumber): FlexibleNumber {\n  num2 = deepCopy(num2);\n  // subtracting a number is the same as adding a negative number\n  num2.negative = !num2.negative;\n  return addNumbers(num1, num2);\n}\n\nfunction subtractDigitSet(numberBase: number, num1: Array<number>, num2: Array<number>): Array<number> {\n  const diffs: Array<NumberTableEntry> = [];\n  num1.forEach((digit1, index) => {\n    const digit2 = num2[index];\n    const diff = lookupSubtraction(digit1, digit2, numberBase);\n    // if (!diff) {\n    //   console.error(\"missing: 1=\" + digit1 + \", 2=\" + digit2 + \", base=\" + numberBase);\n    //   console.log(num1);\n    //   console.log(num2);\n    // }\n    diffs.push(diff);\n  });\n\n  // DEBUG\n  // const diffArr = diffs.map(diff => diff.result + \":\" + diff.carry);\n  // console.log(\"diffs=\" + diffArr.join(\",\"));\n  // END DEBUG\n\n  const result: Array<number> = [];\n  let carry = 0;\n  diffs.forEach(diff => {\n    // subtract carry\n    let diff2 = lookupSubtraction(diff.result, carry, numberBase);\n    // console.log(\"digit=\" + diff.result + \", carry=\" + carry + \", resultDigit=\" + diff2.result + \", resultCarry=\" + diff2.carry);\n    let resultDigit = diff2.result;\n    result.push(resultDigit);\n    carry = diff.carry + diff2.carry;\n  });\n  // restore original ordering of digits\n  return result;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/logic/operations.ts","import {FlexibleNumber} from \"./number\";\nimport {\n  addZeroPadding, convertToDigitSet\n} from \"./util\";\n\n/**\n * Compares two numbers.\n * \n * - returns 0 if `num1` and `num2` are equal\n * - returns 1 if `num1` is greater than `num2`\n * - returns -1 if `num1` is less than `num2`\n */\nexport function compareNumbers(num1: FlexibleNumber, num2: FlexibleNumber): number {\n  // shortcuts based on sign\n  if (num1.negative != num2.negative) {\n    // if num2 is negative and num1 is positive, num1 is greater\n    if (num2.negative) {\n      return 1;\n    }\n    // if num1 is negative and num2 is positive, num1 is less\n    return -1;\n  }\n  // invert the result if both numbers are negative\n  // a larger negative is less than a smaller negative\n  const modifier = num1.negative ? -1 : 1;\n  addZeroPadding(num1.fractionDigits, num2.fractionDigits);\n  addZeroPadding(num1.wholeDigits, num2.wholeDigits);\n  const digits1 = convertToDigitSet(num1);\n  const digits2 = convertToDigitSet(num2);\n  // reverse order of digits so that we can traverse\n  // starting at index zero, beginning with the highest\n  // order of magnitude and going downward.\n  digits1.reverse();\n  digits2.reverse();\n  let cmp = 0;\n  digits1.forEach((digit1, i) => {\n    if (cmp != 0) {\n      return;\n    }\n    const digit2 = digits2[i];\n    // console.log(\"digits: 1=\" + digit1 + \", 2=\" + digit2);\n    if (digit1 > digit2) {\n      // console.log(\"GT\");\n      cmp = 1 * modifier;\n      return;\n    } else if (digit2 > digit1) {\n      // console.log(\"LT\");\n      cmp =  -1 * modifier;\n      return;\n    }\n  });\n  return cmp;\n}\n\n// function compareDigitSets\n\n\n// WEBPACK FOOTER //\n// ./src/logic/compare.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/css/style.css\n// module id = 16\n// module chunks = 0","module.exports = __webpack_public_path__ + \"img/logo.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/logo.png\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}